{"version":3,"file":"static/chunks/pages/search-676d526e58450cc3fd70.js","mappings":"yPA8FA,UA1EyB,WACvB,IAAMA,GAASC,EAAAA,EAAAA,aACf,GAA0BC,EAAAA,EAAAA,KACxB,SAACC,GAAD,OAAsBA,EAAMC,OAAOC,gBAD7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAGRC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAiB,GAAtCC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAoB,KAA3CG,EAAP,KAAgBC,EAAhB,KACMC,EAASC,OAAOhB,EAAOiB,MAAMF,QAC3BG,EAAsBZ,EAAtBY,MAAOC,EAAeb,EAAfa,WACTC,EAAOF,GAASA,EAAME,KAEtBC,GAAWC,EAAAA,EAAAA,cAAY,SAACC,GAC5BX,EAAUW,KACT,IAEGC,GAAUF,EAAAA,EAAAA,cAAY,WAC1BR,EAAW,OACV,IACGW,GAAaH,EAAAA,EAAAA,cAAY,WAC7BR,EAAW,OACV,IAYH,OAVAY,EAAAA,EAAAA,YAAU,WACRlB,EACEmB,EAAAA,GAAAA,QAAoB,CAClBZ,OAAQA,EACRJ,OAAQA,EACRE,QAASA,OAGZ,CAACE,EAAQJ,EAAQE,EAASL,KAG3B,SAAC,IAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,UAAQO,OAGV,SAAC,IAAD,CAASF,QAASA,EAASW,QAASA,EAASC,WAAYA,KACzD,2BACGlB,GAAU,SAAC,IAAD,KAAuB,SAAC,IAAD,CAAUqB,KAAMR,KAClD,SAAC,KAAD,CACES,MAAOV,EACPW,iBAAiB,EACjBC,gBAAiB,GACjBV,SAAUA,EACVW,QAASrB,c,qBCnEhBsB,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,W","sources":["webpack://_N_E/./src/pages/search.tsx","webpack://_N_E/?7dfc"],"sourcesContent":["import axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport {\r\n  PaginationCustom,\r\n  Title,\r\n  TitleWrapper,\r\n  Wrapper,\r\n} from '../../styles/common';\r\nimport KategorySkeleton from '../components/KategorySkeleton';\r\nimport Layout from '../components/Layout';\r\nimport SortBox from '../components/SortBox';\r\nimport TourList from '../components/TourList';\r\nimport { RootState } from '../modules';\r\nimport { searchAsync } from '../modules/detail';\r\nimport { loadUserAsync } from '../modules/user';\r\nimport { SagaStore, wrapper } from './_app';\r\n\r\nconst Search: React.FC = () => {\r\n  const router = useRouter();\r\n  const { data, loading } = useSelector(\r\n    (state: RootState) => state.detail.searchResult\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [pageNo, setPageNo] = useState<number>(1);\r\n  const [arrange, setArrange] = useState<'P' | 'Q'>('Q');\r\n  const search = String(router.query.search);\r\n  const { items, totalCount } = data;\r\n  const item = items && items.item;\r\n\r\n  const onChange = useCallback((page) => {\r\n    setPageNo(page);\r\n  }, []);\r\n\r\n  const sortHot = useCallback(() => {\r\n    setArrange('P');\r\n  }, []);\r\n  const sortRecent = useCallback(() => {\r\n    setArrange('Q');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      searchAsync.request({\r\n        search: search,\r\n        pageNo: pageNo,\r\n        arrange: arrange,\r\n      })\r\n    );\r\n  }, [search, pageNo, arrange, dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <TitleWrapper>\r\n          <Title>{search}</Title>\r\n        </TitleWrapper>\r\n\r\n        <SortBox arrange={arrange} sortHot={sortHot} sortRecent={sortRecent} />\r\n        <div>\r\n          {loading ? <KategorySkeleton /> : <TourList list={item} />}\r\n          <PaginationCustom\r\n            total={totalCount}\r\n            showSizeChanger={false}\r\n            defaultPageSize={12}\r\n            onChange={onChange}\r\n            current={pageNo}\r\n          />\r\n        </div>\r\n      </Wrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, query }) => {\r\n      const cookie = req ? req.headers.cookie : '';\r\n      if (axios.defaults.headers) {\r\n        req && cookie\r\n          ? (axios.defaults.headers.Cookie = cookie)\r\n          : (axios.defaults.headers.Cookie = '');\r\n      }\r\n\r\n      store.dispatch(loadUserAsync.request());\r\n      store.dispatch(END);\r\n\r\n      await (store as SagaStore).sagaTask.toPromise();\r\n      return { props: {} };\r\n    }\r\n);\r\n\r\nexport default Search;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search\",\n      function () {\n        return require(\"private-next-pages/search.tsx\");\n      }\n    ]);\n  "],"names":["router","useRouter","useSelector","state","detail","searchResult","data","loading","dispatch","useDispatch","useState","pageNo","setPageNo","arrange","setArrange","search","String","query","items","totalCount","item","onChange","useCallback","page","sortHot","sortRecent","useEffect","searchAsync","list","total","showSizeChanger","defaultPageSize","current","window","__NEXT_P","push"],"sourceRoot":""}