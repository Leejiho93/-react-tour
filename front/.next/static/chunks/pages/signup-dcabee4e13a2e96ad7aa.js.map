{"version":3,"file":"static/chunks/pages/signup-dcabee4e13a2e96ad7aa.js","mappings":"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","sources":["webpack://_N_E/./src/containers/LoginForm/style.ts","webpack://_N_E/./src/containers/SignUpForm/style.ts","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/SmileOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/SmileOutlined.js","webpack://_N_E/./src/containers/SignUpForm/index.tsx","webpack://_N_E/./src/pages/signup.tsx","webpack://_N_E/?e272"],"sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 80vh;\r\n  width: 500px;\r\n  padding: 30px;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  // border: 1px solid #000;\r\n  ${({ theme }) => theme.window.mobileL} {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  margin-bottom: 60px;\r\n  font-family: BMJUA;\r\n  color: #000;\r\n`;\r\n\r\nexport const LoginLabel = styled(Form.Item)`\r\n  & label {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const LoginInput = styled(Input)`\r\n  height: 50px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const LoginPassword = styled(Input.Password)`\r\n  height: 50px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: end;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const LoginButton = styled(Button)`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #1a73e8;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background-color: #1890ff;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const SubWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  & a {\r\n    color: #5b5b5b;\r\n  }\r\n`;\r\n\r\nexport const LoginError = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: red;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 80vh;\r\n  width: 500px;\r\n  padding: 30px;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  // border: 1px solid #000;\r\n  ${({ theme }) => theme.window.mobileL} {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  margin-bottom: 60px;\r\n  font-family: BMJUA;\r\n  color: #000;\r\n`;\r\n\r\nexport const ErrorMessage = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: red;\r\n`;\r\n\r\nexport const SignupLabel = styled(Form.Item)`\r\n  & label {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const SignupInput = styled(Input)`\r\n  height: 50px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const SignupPassword = styled(Input.Password)`\r\n  height: 50px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  text-align: end;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const SignupButton = styled(Button)`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #1a73e8;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    background-color: #1890ff;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const ValidationError = styled.div`\r\n  color: red;\r\n  margin-bottom: 10px;\r\n  margin-top: -5px;\r\n`;\r\n","// This icon file is generated automatically.\nvar SmileOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z\" } }] }, \"name\": \"smile\", \"theme\": \"outlined\" };\nexport default SmileOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SmileOutlinedSvg from \"@ant-design/icons-svg/es/asn/SmileOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SmileOutlined = function SmileOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SmileOutlinedSvg\n  }));\n};\n\nSmileOutlined.displayName = 'SmileOutlined';\nexport default /*#__PURE__*/React.forwardRef(SmileOutlined);","import * as React from 'react';\r\nimport { useCallback } from 'react';\r\nimport Router from 'next/router';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../modules';\r\nimport { signupAsync, signupReset } from '../../modules/user';\r\nimport {\r\n  ErrorMessage,\r\n  SignupButton,\r\n  SignupInput,\r\n  SignupLabel,\r\n  SignupPassword,\r\n  Title,\r\n  ValidationError,\r\n  Wrapper,\r\n} from './style';\r\nimport { SubWrapper, ButtonWrapper } from '../LoginForm/style';\r\nimport { Form } from 'antd';\r\nimport Link from 'next/link';\r\nimport { UserOutlined, LockOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport Swal from 'sweetalert2';\r\nimport useInput from '../../../utils/useInput';\r\n\r\nconst SignUpForm: React.FC = () => {\r\n  const [id, onChangeId] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { me, isSignedup, isSigningup, signupError } = useSelector(\r\n    (state: RootState) => state.user\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (me) {\r\n      Swal.fire({\r\n        title: '잘못된 접근',\r\n        text: '홈 화면으로 이동합니다.',\r\n        icon: 'warning',\r\n      }).then(() => {\r\n        Router.push('/');\r\n      });\r\n    }\r\n  }, [me]);\r\n\r\n  React.useEffect(() => {\r\n    if (isSignedup) {\r\n      Swal.fire({\r\n        title: '회원가입 성공',\r\n        text: '로그인 화면으로 이동합니다.',\r\n        icon: 'success',\r\n      }).then(() => {\r\n        dispatch(signupReset());\r\n        Router.push('/login');\r\n      });\r\n    }\r\n  }, [isSignedup, dispatch]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    const checkPassword = /^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[0-9]).{8,20}$/;\r\n    if (!checkPassword.test(password)) {\r\n      return setPasswordErrorMessage(\r\n        '8~20자의 영문자, 숫자, 특수문자를 사용하세요.'\r\n      );\r\n    } else {\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    dispatch(\r\n      signupAsync.request({\r\n        userId: id,\r\n        password,\r\n        nickname,\r\n      })\r\n    );\r\n  }, [id, password, nickname, dispatch]);\r\n  return (\r\n    <Wrapper>\r\n      <Title>회원가입</Title>\r\n\r\n      <ErrorMessage>{signupError}</ErrorMessage>\r\n      <Form onFinish={onSubmit}>\r\n        <SignupLabel\r\n          name=\"id\"\r\n          rules={[{ required: true, message: '아이디를 입력해주세요.' }]}\r\n        >\r\n          <SignupInput\r\n            prefix={<UserOutlined />}\r\n            value={id}\r\n            onChange={onChangeId}\r\n            id=\"id\"\r\n            placeholder=\"아이디\"\r\n          />\r\n        </SignupLabel>\r\n\r\n        <SignupLabel\r\n          name=\"password\"\r\n          rules={[{ required: true, message: '비밀번호를 입력해주세요.' }]}\r\n        >\r\n          <SignupPassword\r\n            prefix={<LockOutlined />}\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            placeholder=\"비밀번호\"\r\n          />\r\n        </SignupLabel>\r\n        <ValidationError>{passwordErrorMessage}</ValidationError>\r\n\r\n        <SignupLabel\r\n          name=\"nickname\"\r\n          rules={[{ required: true, message: '닉네임를 입력해주세요.' }]}\r\n        >\r\n          <SignupInput\r\n            prefix={<SmileOutlined />}\r\n            value={nickname}\r\n            onChange={onChangeNickname}\r\n            id=\"nickname\"\r\n            placeholder=\"닉네임\"\r\n          />\r\n        </SignupLabel>\r\n        <ButtonWrapper>\r\n          <SignupButton htmlType=\"submit\" loading={isSigningup}>\r\n            가입하기\r\n          </SignupButton>\r\n        </ButtonWrapper>\r\n        <SubWrapper>\r\n          <Link href=\"/login\">로그인</Link>\r\n        </SubWrapper>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import * as React from 'react';\r\nimport SignUpForm from '../containers/SignUpForm';\r\n\r\nconst Signup: React.FC = () => {\r\n  return <SignUpForm />;\r\n};\r\n\r\nexport default Signup;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signup\",\n      function () {\n        return require(\"private-next-pages/signup.tsx\");\n      }\n    ]);\n  "],"names":["Wrapper","styled","theme","window","mobileL","Title","LoginLabel","Form","LoginInput","Input","LoginPassword","ButtonWrapper","LoginButton","Button","SubWrapper","LoginError","ErrorMessage","SignupLabel","SignupInput","SignupPassword","SignupButton","ValidationError","props","ref","AntdIcon","icon","displayName","useInput","id","onChangeId","password","onChangePassword","nickname","onChangeNickname","useState","passwordErrorMessage","setPasswordErrorMessage","dispatch","useDispatch","useSelector","state","user","me","isSignedup","isSigningup","signupError","React","Swal","title","text","then","Router","signupReset","onSubmit","useCallback","test","signupAsync","userId","onFinish","name","rules","required","message","prefix","UserOutlined","value","onChange","placeholder","LockOutlined","htmlType","loading","href","__NEXT_P","push"],"sourceRoot":""}