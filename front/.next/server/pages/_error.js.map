{"version":3,"file":"../pages/_error.js","mappings":";;;;;;;;;;;;;;;;;;AAKA,MAAMA,KAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC/D,sBACE;AAAA,cACGA,UAAU,GAAI,MAAKA,UAAW,QAApB,GAA8B;AAD3C,IADF;AAKD,CAND;;AAQAD,KAAK,CAACE,eAAN,GAAwB,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAmC;AACzD,QAAMH,UAAU,GAAGE,GAAG,GAAGA,GAAG,CAACF,UAAP,GAAoBG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoB,IAAjE;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,iEAAeD,KAAf;;;;;;;AClBA","sources":["webpack://front/./src/pages/_error.tsx","webpack://front/external \"react/jsx-runtime\""],"sourcesContent":["import { NextPageContext, NextPage } from 'next';\r\n\r\ninterface ErrorComponentProps {\r\n  statusCode?: number | null;\r\n}\r\nconst Error: NextPage<ErrorComponentProps> = ({ statusCode }) => {\r\n  return (\r\n    <p>\r\n      {statusCode ? `서버 ${statusCode} 에러 발생` : '클라이언트 에러 발생'}\r\n    </p>\r\n  );\r\n};\r\n\r\nError.getInitialProps = ({ res, err }: NextPageContext) => {\r\n  const statusCode = res ? res.statusCode : err ? err.statusCode : null;\r\n  return { statusCode };\r\n};\r\n\r\nexport default Error;\r\n","module.exports = require(\"react/jsx-runtime\");"],"names":["Error","statusCode","getInitialProps","res","err"],"sourceRoot":""}